Index: src/main/kotlin/com/salesforce/revoman/output/Rundown.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * ****************************************************************************\n * Copyright (c) 2023, Salesforce, Inc. All rights reserved. SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or\n * https://opensource.org/licenses/BSD-3-Clause\n * ****************************************************************************\n */\npackage com.salesforce.revoman.output\n\nimport com.salesforce.revoman.output.postman.PostmanEnvironment\nimport java.lang.reflect.Type\nimport org.http4k.core.Request\nimport org.http4k.core.Response\n\ndata class Rundown(\n  @JvmField val stepNameToReport: Map<String, StepReport> = emptyMap(),\n  @JvmField val mutableEnv: PostmanEnvironment<Any?> = PostmanEnvironment()\n) {\n  val immutableEnvMap\n    get() = mutableEnv.toMap()\n\n  val firstUnsuccessfulStepNameInOrder: String?\n    get() =\n      stepNameToReport.entries.firstOrNull { (_, stepReport) -> !stepReport.isSuccessful }?.key\n\n  val areAllStepsSuccessful\n    get() = stepNameToReport.values.all { it.isSuccessful }\n\n  fun reportsForStepsInFolder(folderName: String): List<StepReport?> =\n    stepNameToReport.filter { it.key.contains(\"$folderName$FOLDER_DELIMITER\") }.map { it.value }\n\n  fun areAllStepsInFolderSuccessful(folderName: String): Boolean =\n    reportsForStepsInFolder(folderName).all { it?.isSuccessful ?: false }\n\n  fun reportForStepName(stepName: String): StepReport? =\n    stepNameToReport.entries\n      .firstOrNull { it.key == stepName || it.key.substringAfterLast(FOLDER_DELIMITER) == stepName }\n      ?.value\n}\n\ndata class StepReport(\n  val requestData: Request? = null,\n  val responseObj: Any? = null,\n  val responseType: Type? = null,\n  val responseData: Response? = null,\n  val httpFailure: Throwable? = null,\n  val testScriptJsFailure: Throwable? = null,\n  val validationFailure: Any? = null,\n  val hookFailures: Failures = Failures(),\n  val postmanEnvironmentSnapshot: PostmanEnvironment<Any?>\n) {\n  val isSuccessful: Boolean\n    get() =\n      (responseData?.status?.successful\n        ?: false) && validationFailure == null && testScriptJsFailure == null\n}\n\ndata class Failures(\n  val pre: List<Throwable> = emptyList(),\n  val post: List<Throwable> = emptyList()\n)\n\nconst val FOLDER_DELIMITER = \"|>\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt b/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt
--- a/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt	(date 1694943337245)
@@ -8,6 +8,7 @@
 package com.salesforce.revoman.output
 
 import com.salesforce.revoman.output.postman.PostmanEnvironment
+import io.vavr.control.Either
 import java.lang.reflect.Type
 import org.http4k.core.Request
 import org.http4k.core.Response
@@ -39,25 +40,33 @@
 }
 
 data class StepReport(
-  val requestData: Request? = null,
-  val responseObj: Any? = null,
-  val responseType: Type? = null,
-  val responseData: Response? = null,
-  val httpFailure: Throwable? = null,
+  val requestInfo: Request? = null,
+  val responseInfo: Either<Throwable, ResponseInfo>? = null,
   val testScriptJsFailure: Throwable? = null,
-  val validationFailure: Any? = null,
-  val hookFailures: Failures = Failures(),
+  val validationFailure: Either<Throwable, Any?>? = null,
+  val hookFailures: HookFailures = HookFailures(),
   val postmanEnvironmentSnapshot: PostmanEnvironment<Any?>
 ) {
   val isSuccessful: Boolean
     get() =
-      (responseData?.status?.successful
-        ?: false) && validationFailure == null && testScriptJsFailure == null
+      (responseInfo?.map { it.responseData?.status?.successful }?.getOrElse(false)
+        ?: false) &&
+        testScriptJsFailure == null &&
+        validationFailure?.map { it == null }?.getOrElse(false) ?: true &&
+        hookFailures.isEmpty
 }
 
-data class Failures(
+data class ResponseInfo(
+  val responseObj: Either<Throwable, Pair<Type, Any>>? = null,
+  val responseData: Response? = null
+)
+
+data class HookFailures(
   val pre: List<Throwable> = emptyList(),
   val post: List<Throwable> = emptyList()
-)
+) {
+  val isEmpty
+    get() = pre.isEmpty() && post.isEmpty()
+}
 
 const val FOLDER_DELIMITER = "|>"
Index: src/main/kotlin/com/salesforce/revoman/internal/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * ****************************************************************************\n * Copyright (c) 2023, Salesforce, Inc. All rights reserved. SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or\n * https://opensource.org/licenses/BSD-3-Clause\n * ****************************************************************************\n */\npackage com.salesforce.revoman.internal\n\nimport com.google.common.io.Resources\nimport com.salesforce.revoman.input.CheckedBiConsumer\nimport com.salesforce.revoman.input.HookConfig\nimport com.salesforce.revoman.input.HookType\nimport com.salesforce.revoman.input.ResponseConfig\nimport com.salesforce.revoman.internal.postman.state.Item\nimport com.salesforce.revoman.output.FOLDER_DELIMITER\nimport com.salesforce.revoman.output.Rundown\nimport org.apache.commons.lang3.StringUtils\nimport org.http4k.core.ContentType\nimport org.http4k.core.Response\n\ninternal fun isContentTypeApplicationJson(response: Response) =\n  response.bodyString().isNotBlank() &&\n    response.header(\"content-type\")?.let {\n      StringUtils.deleteWhitespace(it)\n        .equals(\n          StringUtils.deleteWhitespace(ContentType.APPLICATION_JSON.toHeaderValue()),\n          ignoreCase = true\n        )\n    }\n      ?: false\n\ninternal fun readFileToString(fileRelativePath: String): String =\n  Resources.getResource(fileRelativePath).readText()\n\ninternal fun List<Item>.deepFlattenItems(parentFolderName: String = \"\"): List<Item> =\n  asSequence()\n    .flatMap { item ->\n      val concatWithParentFolder =\n        if (parentFolderName.isEmpty()) item.name else \"$parentFolderName|>${item.name}\"\n      item.item?.deepFlattenItems(concatWithParentFolder)\n        ?: listOf(item.copy(name = \"${item.request.method}: $concatWithParentFolder\"))\n    }\n    .toList()\n\ninternal fun getHooksForStep(\n  hookConfigs: Set<Set<HookConfig>>,\n  currentStepName: String,\n  hookType: HookType\n): List<CheckedBiConsumer<String, Rundown>> =\n  hookConfigs\n    .flatten()\n    .filter { stepNameEquals(it.stepName, currentStepName) && it.hookType == hookType }\n    .map { it.hook }\n\nprivate fun stepNameEquals(stepNameFromConfig: String, currentStepName: String) =\n  stepNameFromConfig == currentStepName ||\n    stepNameFromConfig == currentStepName.substringAfterLast(FOLDER_DELIMITER)\n\ninternal fun getResponseConfigForStepName(\n  stepName: String,\n  responseConfigs: Set<Set<ResponseConfig>>\n): ResponseConfig? = responseConfigs.flatten().firstOrNull { stepNameEquals(it.stepName, stepName) }\n\ninternal fun isStepNameInPassList(stepName: String, haltOnAnyFailureExceptForSteps: Set<String>) =\n  haltOnAnyFailureExceptForSteps.isEmpty() ||\n    haltOnAnyFailureExceptForSteps.contains(stepName) ||\n    haltOnAnyFailureExceptForSteps.contains(stepName.substringAfterLast(FOLDER_DELIMITER))\n\n// ! TODO 24/06/23 gopala.akshintala: Regex support to filter Step Names\ninternal fun filterStep(runOnlySteps: Set<String>, skipSteps: Set<String>, stepName: String) =\n  (runOnlySteps.isEmpty() && skipSteps.isEmpty()) ||\n    (runOnlySteps.isNotEmpty() &&\n      (runOnlySteps.contains(stepName) ||\n        runOnlySteps.contains(stepName.substringAfterLast(FOLDER_DELIMITER))) ||\n      (skipSteps.isNotEmpty() &&\n        (!skipSteps.contains(stepName) &&\n          !skipSteps.contains(stepName.substringAfterLast(FOLDER_DELIMITER)))))\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt b/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt
--- a/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt	(date 1694942737155)
@@ -62,13 +62,20 @@
   responseConfigs: Set<Set<ResponseConfig>>
 ): ResponseConfig? = responseConfigs.flatten().firstOrNull { stepNameEquals(it.stepName, stepName) }
 
-internal fun isStepNameInPassList(stepName: String, haltOnAnyFailureExceptForSteps: Set<String>) =
+internal fun isStepNameInPassList(
+  stepName: String,
+  haltOnAnyFailureExceptForSteps: Set<String>
+): Boolean =
   haltOnAnyFailureExceptForSteps.isEmpty() ||
     haltOnAnyFailureExceptForSteps.contains(stepName) ||
     haltOnAnyFailureExceptForSteps.contains(stepName.substringAfterLast(FOLDER_DELIMITER))
 
 // ! TODO 24/06/23 gopala.akshintala: Regex support to filter Step Names
-internal fun filterStep(runOnlySteps: Set<String>, skipSteps: Set<String>, stepName: String) =
+internal fun filterStep(
+  runOnlySteps: Set<String>,
+  skipSteps: Set<String>,
+  stepName: String
+): Boolean =
   (runOnlySteps.isEmpty() && skipSteps.isEmpty()) ||
     (runOnlySteps.isNotEmpty() &&
       (runOnlySteps.contains(stepName) ||
Index: src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * ****************************************************************************\n * Copyright (c) 2023, Salesforce, Inc. All rights reserved. SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or\n * https://opensource.org/licenses/BSD-3-Clause\n * ****************************************************************************\n */\npackage com.salesforce.revoman.output.postman\n\n/** This is more like a value class (wrapper) on mutableEnv providing some useful utilities */\ndata class PostmanEnvironment<ValueT : Any?>(\n  private val mutableEnv: MutableMap<String, ValueT> = mutableMapOf()\n) : MutableMap<String, ValueT> by mutableEnv {\n\n  val immutableEnvironment\n    get() = mutableEnv.toMap()\n\n  fun set(key: String, value: ValueT) {\n    mutableEnv[key] = value\n  }\n\n  @Suppress(\"unused\")\n  fun unset(key: String) {\n    mutableEnv.remove(key)\n  }\n\n  // ! TODO 24/06/23 gopala.akshintala: Support for Regex while querying environment\n\n  fun getString(key: String?) = mutableEnv[key] as String?\n\n  fun getInt(key: String?) = mutableEnv[key] as Int?\n\n  // ! TODO 13/09/23 gopala.akshintala: Refactor code to remove duplication\n\n  fun <T> mutableEnvCopyWithKeysStartingWith(\n    type: Class<T>,\n    vararg prefixes: String\n  ): PostmanEnvironment<T> =\n    PostmanEnvironment(\n      mutableEnv\n        .filter {\n          type.isInstance(it.value) && prefixes.any { prefix -> it.key.startsWith(prefix) }\n        }\n        .mapValues { type.cast(it.value) }\n        .toMutableMap()\n    )\n\n  fun <T> mutableEnvCopyExcludingKeys(\n    type: Class<T>,\n    whiteListKeys: Set<String>\n  ): PostmanEnvironment<T> =\n    PostmanEnvironment(\n      mutableEnv\n        .filter { type.isInstance(it.value) && !whiteListKeys.contains(it.key) }\n        .mapValues { type.cast(it.value) }\n        .toMutableMap()\n    )\n\n  fun <T> mutableEnvCopyWithKeysNotStartingWith(\n    type: Class<T>,\n    vararg prefixes: String\n  ): PostmanEnvironment<T> =\n    PostmanEnvironment(\n      mutableEnv\n        .filter {\n          type.isInstance(it.value) && prefixes.all { suffix -> !it.key.startsWith(suffix) }\n        }\n        .mapValues { type.cast(it.value) }\n        .toMutableMap()\n    )\n\n  fun <T> mutableEnvCopyWithKeysEndingWith(\n    type: Class<T>,\n    vararg suffixes: String\n  ): PostmanEnvironment<T> =\n    PostmanEnvironment(\n      mutableEnv\n        .filter { type.isInstance(it.value) && suffixes.any { suffix -> it.key.endsWith(suffix) } }\n        .mapValues { type.cast(it.value) }\n        .toMutableMap()\n    )\n\n  fun <T> mutableEnvCopyWithKeysNotEndingWith(\n    type: Class<T>,\n    vararg suffixes: String\n  ): PostmanEnvironment<T> =\n    PostmanEnvironment(\n      mutableEnv\n        .filter { type.isInstance(it.value) && suffixes.all { suffix -> !it.key.endsWith(suffix) } }\n        .mapValues { type.cast(it.value) }\n        .toMutableMap()\n    )\n\n  fun <T> valuesForKeysStartingWith(type: Class<T>, prefix: String): Set<T> =\n    mutableEnvCopyWithKeysStartingWith(type, prefix).mutableEnv.values.toSet()\n\n  fun <T> valuesForKeysStartingWith(type: Class<T>, vararg prefixes: String): Set<T> =\n    mutableEnv.entries\n      .asSequence()\n      .filter { type.isInstance(it.value) && prefixes.any { suffix -> it.key.startsWith(suffix) } }\n      .mapNotNull { type.cast(it.value) }\n      .toSet()\n\n  fun <T> valuesForKeysNotStartingWith(type: Class<T>, vararg prefixes: String): Set<T?> =\n    mutableEnv.entries\n      .asSequence()\n      .filter { type.isInstance(it.value) && prefixes.all { suffix -> !it.key.startsWith(suffix) } }\n      .mapNotNull { type.cast(it.value) }\n      .toSet()\n\n  fun <T> valuesForKeysEndingWith(type: Class<T>, suffix: String): Set<T?> =\n    mutableEnv.entries\n      .asSequence()\n      .filter { type.isInstance(it.value) && it.key.endsWith(suffix) }\n      .mapNotNull { type.cast(it.value) }\n      .toSet()\n\n  fun <T> valuesForKeysEndingWith(type: Class<T>, vararg suffixes: String): Set<T?> =\n    mutableEnv.entries\n      .asSequence()\n      .filter { type.isInstance(it.value) && suffixes.any { suffix -> it.key.endsWith(suffix) } }\n      .mapNotNull { type.cast(it.value) }\n      .toSet()\n\n  fun <T> valuesForKeysNotEndingWith(type: Class<T>, vararg suffixes: String): Set<T?> =\n    mutableEnv.entries\n      .asSequence()\n      .filter { type.isInstance(it.value) && suffixes.all { suffix -> !it.key.endsWith(suffix) } }\n      .mapNotNull { type.cast(it.value) }\n      .toSet()\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt b/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt
--- a/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt	(date 1694918642810)
@@ -12,7 +12,7 @@
   private val mutableEnv: MutableMap<String, ValueT> = mutableMapOf()
 ) : MutableMap<String, ValueT> by mutableEnv {
 
-  val immutableEnvironment
+  val immutableEnv: Map<String, ValueT>
     get() = mutableEnv.toMap()
 
   fun set(key: String, value: ValueT) {
Index: src/main/kotlin/com/salesforce/revoman/ReVoman.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * ****************************************************************************\n * Copyright (c) 2023, Salesforce, Inc. All rights reserved. SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or\n * https://opensource.org/licenses/BSD-3-Clause\n * ****************************************************************************\n */\npackage com.salesforce.revoman\n\nimport com.salesforce.revoman.input.HookConfig\nimport com.salesforce.revoman.input.HookType.POST\nimport com.salesforce.revoman.input.HookType.PRE\nimport com.salesforce.revoman.input.Kick\nimport com.salesforce.revoman.input.ResponseConfig\nimport com.salesforce.revoman.internal.asA\nimport com.salesforce.revoman.internal.deepFlattenItems\nimport com.salesforce.revoman.internal.executeTestScriptJs\nimport com.salesforce.revoman.internal.filterStep\nimport com.salesforce.revoman.internal.getHooksForStep\nimport com.salesforce.revoman.internal.getResponseConfigForStepName\nimport com.salesforce.revoman.internal.initMoshi\nimport com.salesforce.revoman.internal.isContentTypeApplicationJson\nimport com.salesforce.revoman.internal.isStepNameInPassList\nimport com.salesforce.revoman.internal.postman.RegexReplacer\nimport com.salesforce.revoman.internal.postman.initPmEnvironment\nimport com.salesforce.revoman.internal.postman.pm\nimport com.salesforce.revoman.internal.postman.postManVariableRegex\nimport com.salesforce.revoman.internal.postman.state.Item\nimport com.salesforce.revoman.internal.postman.state.Template\nimport com.salesforce.revoman.internal.prepareHttpClient\nimport com.salesforce.revoman.internal.readFileToString\nimport com.salesforce.revoman.output.Failures\nimport com.salesforce.revoman.output.Rundown\nimport com.salesforce.revoman.output.StepReport\nimport com.salesforce.vador.config.ValidationConfig\nimport com.salesforce.vador.config.base.BaseValidationConfig\nimport com.salesforce.vador.execution.Vador\nimport com.squareup.moshi.Moshi\nimport com.squareup.moshi.adapter\nimport com.squareup.moshi.rawType\nimport io.github.oshai.kotlinlogging.KotlinLogging\nimport java.lang.reflect.Type\nimport java.util.*\nimport org.http4k.core.HttpHandler\nimport org.http4k.core.Response\n\nobject ReVoman {\n  @JvmStatic\n  fun revUp(kick: Kick): Rundown =\n    revUp(\n      kick.templatePath(),\n      kick.runOnlySteps(),\n      kick.skipSteps(),\n      kick.environmentPath(),\n      kick.dynamicEnvironment(),\n      kick.customDynamicVariables(),\n      kick.bearerTokenKey(),\n      kick.haltOnAnyFailureExceptForSteps(),\n      kick.hooks(),\n      kick.responseConfig(),\n      kick.customAdaptersForResponse(),\n      kick.typesInResponseToIgnore(),\n      kick.insecureHttp(),\n    )\n\n  private val logger = KotlinLogging.logger {}\n\n  @OptIn(ExperimentalStdlibApi::class)\n  private fun revUp(\n    pmTemplatePath: String,\n    runOnlySteps: Set<String>,\n    skipSteps: Set<String>,\n    environmentPath: String?,\n    dynamicEnvironment: Map<String, String?>,\n    customDynamicVariables: Map<String, (String) -> String>,\n    bearerTokenKeyFromConfig: String?,\n    haltOnAnyFailureExceptForSteps: Set<String>,\n    hooks: Set<Set<HookConfig>>,\n    responseConfigs: Set<Set<ResponseConfig>>,\n    customAdaptersForResponse: List<Any>,\n    typesInResponseToIgnore: Set<Class<out Any>>,\n    insecureHttp: Boolean,\n  ): Rundown {\n    // ! TODO 18/06/23 gopala.akshintala: Add some more require conditions and Move to a separate\n    // component Config validation\n    // ! TODO 22/06/23 gopala.akshintala: Validate if validation config for a step is mentioned but\n    // the stepName is not present\n    require(Collections.disjoint(runOnlySteps, skipSteps)) {\n      \"runOnlySteps and skipSteps cannot be intersected\"\n    }\n    initPmEnvironment(environmentPath, dynamicEnvironment, customDynamicVariables)\n    val (pmSteps, auth) =\n      Moshi.Builder().build().adapter<Template>().fromJson(readFileToString(pmTemplatePath))\n        ?: return Rundown()\n    val bearerTokenKey =\n      bearerTokenKeyFromConfig\n        ?: auth?.bearer?.firstOrNull()?.value?.let {\n          postManVariableRegex.find(it)?.groups?.get(\"variableKey\")?.value ?: \"\"\n        }\n    val moshiReVoman = initMoshi(customAdaptersForResponse, typesInResponseToIgnore)\n    var noFailure = true\n    // ! TODO 22/06/23 gopala.akshintala: Validate if steps with the same name are used in config\n    val stepNameToReport =\n      pmSteps\n        .deepFlattenItems()\n        .asSequence()\n        .takeWhile { noFailure }\n        .filter { filterStep(runOnlySteps, skipSteps, it.name) }\n        .fold<Item, Map<String, StepReport>>(mapOf()) { stepNameToReport, itemWithRegex ->\n          val stepName = itemWithRegex.name\n          logger.info { \"***** Processing Step: $stepName *****\" }\n          val preHookFailures =\n            getHooksForStep(hooks, stepName, PRE)\n              .mapNotNull { hook ->\n                runCatching { hook.accept(stepName, Rundown(stepNameToReport, pm.environment)) }\n                  .exceptionOrNull()\n              }\n              .onEach {\n                logger.error(it) { \"❗\uFE0F $stepName: Exception while validating response\" }\n                noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n              }\n          if (preHookFailures.isNotEmpty()) {\n            return@fold stepNameToReport +\n              (stepName to\n                StepReport(\n                  hookFailures = Failures(pre = preHookFailures),\n                  postmanEnvironmentSnapshot = pm.environment.copy()\n                ))\n          }\n          // * NOTE gopala.akshintala 06/08/22: Preparing httpClient for each step,\n          // * as there can be intermediate auths\n          val httpClient: HttpHandler =\n            prepareHttpClient(pm.environment.getString(bearerTokenKey), insecureHttp)\n          val pmRequest =\n            RegexReplacer(pm.environment, customDynamicVariables)\n              .replaceRegex(itemWithRegex.request)\n          val request = pmRequest.toHttpRequest()\n          val response: Response =\n            runCatching { httpClient(request) }\n              .getOrElse { throwable ->\n                noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n                return@fold stepNameToReport +\n                  (stepName to\n                    StepReport(\n                      request,\n                      httpFailure = throwable,\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    ))\n              }\n          val stepReport: StepReport =\n            when {\n              response.status.successful -> {\n                val testScriptJsResult = runCatching {\n                  executeTestScriptJs(pmRequest, itemWithRegex.event, response)\n                }\n                if (testScriptJsResult.isFailure) {\n                  logger.error(testScriptJsResult.exceptionOrNull()) {\n                    \"❗\uFE0F $stepName: Exception while executing test script\"\n                  }\n                  noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n                }\n                when {\n                  isContentTypeApplicationJson(response) -> {\n                    val responseConfig: ResponseConfig? =\n                      getResponseConfigForStepName(stepName, responseConfigs)\n                    val successType = responseConfig?.successType ?: Any::class.java as Type\n                    val responseObj = moshiReVoman.asA<Any>(response.bodyString(), successType)\n                    val validationResult = runCatching {\n                      responseConfig?.validationConfig?.let { validate(responseObj, it.prepare()) }\n                    }\n                    if (validationResult.isFailure) {\n                      logger.error(validationResult.exceptionOrNull()) {\n                        \"❗\uFE0F $stepName: Exception while validating response\"\n                      }\n                      noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n                    }\n                    StepReport(\n                      request,\n                      responseObj,\n                      responseObj.javaClass,\n                      response,\n                      testScriptJsResult.exceptionOrNull(),\n                      validationFailure = validationResult,\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    )\n                  }\n                  else -> {\n                    // ! TODO gopala.akshintala 04/08/22: Support other non-JSON content types\n                    StepReport(\n                      request,\n                      response.bodyString(),\n                      String::class.java,\n                      response,\n                      testScriptJsFailure = testScriptJsResult.exceptionOrNull(),\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    )\n                  }\n                }\n              }\n              else -> {\n                logger.error { \"❌ $stepName: Http request failed\" }\n                noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n                val responseConfig: ResponseConfig? =\n                  getResponseConfigForStepName(stepName, responseConfigs)\n                when {\n                  responseConfig?.errorType != null -> {\n                    val errorType = responseConfig.errorType.rawType.kotlin\n                    val errorResponseObj = moshiReVoman.asA(response.bodyString(), errorType)\n                    StepReport(\n                      request,\n                      errorResponseObj,\n                      errorResponseObj.javaClass,\n                      response,\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    )\n                  }\n                  responseConfig?.successType != null -> {\n                    val errorMsg =\n                      \"‼\uFE0F $stepName: Unable to validate due to unsuccessful response: $response\"\n                    logger.error { errorMsg }\n                    StepReport(\n                      request,\n                      response.bodyString(),\n                      String::class.java,\n                      response,\n                      validationFailure = errorMsg,\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    )\n                  }\n                  else ->\n                    StepReport(\n                      request,\n                      response.bodyString(),\n                      String::class.java,\n                      response,\n                      postmanEnvironmentSnapshot = pm.environment.copy()\n                    )\n                }\n              }\n            }\n          val postHookFailures =\n            (stepNameToReport + (stepName to stepReport)).let { snr ->\n              getHooksForStep(hooks, stepName, POST)\n                .mapNotNull { hook ->\n                  runCatching { hook.accept(stepName, Rundown(snr, pm.environment)) }\n                    .exceptionOrNull()\n                }\n                .onEach {\n                  logger.error(it) { \"❗\uFE0F $stepName: Exception while validating response\" }\n                  noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)\n                }\n            }\n          stepNameToReport +\n            (stepName to\n              stepReport.copy(hookFailures = stepReport.hookFailures.copy(post = postHookFailures)))\n        }\n    return Rundown(stepNameToReport, pm.environment)\n  }\n\n  // ! TODO gopala.akshintala 03/08/22: Extend the validation for other configs and strategies\n  private fun validate(\n    responseObj: Any,\n    validationConfig: BaseValidationConfig<out Any, out Any>?\n  ): Any? =\n    if (validationConfig != null) {\n      val result =\n        Vador.validateAndFailFast(responseObj, validationConfig as ValidationConfig<Any, Any?>)\n      result.orElse(null)\n    } else null\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/salesforce/revoman/ReVoman.kt b/src/main/kotlin/com/salesforce/revoman/ReVoman.kt
--- a/src/main/kotlin/com/salesforce/revoman/ReVoman.kt	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/main/kotlin/com/salesforce/revoman/ReVoman.kt	(date 1694943337239)
@@ -29,7 +29,8 @@
 import com.salesforce.revoman.internal.postman.state.Template
 import com.salesforce.revoman.internal.prepareHttpClient
 import com.salesforce.revoman.internal.readFileToString
-import com.salesforce.revoman.output.Failures
+import com.salesforce.revoman.output.HookFailures
+import com.salesforce.revoman.output.ResponseInfo
 import com.salesforce.revoman.output.Rundown
 import com.salesforce.revoman.output.StepReport
 import com.salesforce.vador.config.ValidationConfig
@@ -41,6 +42,10 @@
 import io.github.oshai.kotlinlogging.KotlinLogging
 import java.lang.reflect.Type
 import java.util.*
+import kotlin.Result.Companion.failure
+import kotlin.Result.Companion.success
+import kotlin.properties.ReadWriteProperty
+import kotlin.reflect.KProperty
 import org.http4k.core.HttpHandler
 import org.http4k.core.Response
 
@@ -48,7 +53,7 @@
   @JvmStatic
   fun revUp(kick: Kick): Rundown =
     revUp(
-      kick.templatePath(),
+      kick,
       kick.runOnlySteps(),
       kick.skipSteps(),
       kick.environmentPath(),
@@ -64,10 +69,27 @@
     )
 
   private val logger = KotlinLogging.logger {}
+  // ! TODO 16/09/23 gopala.akshintala: setter with logging and checks
+
+  private lateinit var executionStepName: String
+
+  private var Kick.noFailure: Boolean by NoFailure()
+
+  private class NoFailure : ReadWriteProperty<Kick, Boolean> {
+    private var noFailure = true
+
+    override fun getValue(thisRef: Kick, property: KProperty<*>): Boolean = noFailure
+
+    override fun setValue(thisRef: Kick, property: KProperty<*>, value: Boolean) {
+      noFailure =
+        noFailure &&
+          isStepNameInPassList(executionStepName, thisRef.haltOnAnyFailureExceptForSteps())
+    }
+  }
 
   @OptIn(ExperimentalStdlibApi::class)
   private fun revUp(
-    pmTemplatePath: String,
+    kick: Kick,
     runOnlySteps: Set<String>,
     skipSteps: Set<String>,
     environmentPath: String?,
@@ -90,7 +112,7 @@
     }
     initPmEnvironment(environmentPath, dynamicEnvironment, customDynamicVariables)
     val (pmSteps, auth) =
-      Moshi.Builder().build().adapter<Template>().fromJson(readFileToString(pmTemplatePath))
+      Moshi.Builder().build().adapter<Template>().fromJson(readFileToString(kick.templatePath()))
         ?: return Rundown()
     val bearerTokenKey =
       bearerTokenKeyFromConfig
@@ -98,13 +120,12 @@
           postManVariableRegex.find(it)?.groups?.get("variableKey")?.value ?: ""
         }
     val moshiReVoman = initMoshi(customAdaptersForResponse, typesInResponseToIgnore)
-    var noFailure = true
     // ! TODO 22/06/23 gopala.akshintala: Validate if steps with the same name are used in config
     val stepNameToReport =
       pmSteps
         .deepFlattenItems()
         .asSequence()
-        .takeWhile { noFailure }
+        .takeWhile { kick.noFailure }
         .filter { filterStep(runOnlySteps, skipSteps, it.name) }
         .fold<Item, Map<String, StepReport>>(mapOf()) { stepNameToReport, itemWithRegex ->
           val stepName = itemWithRegex.name
@@ -116,14 +137,14 @@
                   .exceptionOrNull()
               }
               .onEach {
-                logger.error(it) { "❗️ $stepName: Exception while validating response" }
-                noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)
+                logger.error(it) { "❗️ $stepName: Exception in pre-hook" }
+                kick.noFailure = true
               }
           if (preHookFailures.isNotEmpty()) {
             return@fold stepNameToReport +
               (stepName to
                 StepReport(
-                  hookFailures = Failures(pre = preHookFailures),
+                  hookFailures = HookFailures(pre = preHookFailures),
                   postmanEnvironmentSnapshot = pm.environment.copy()
                 ))
           }
@@ -137,16 +158,18 @@
           val request = pmRequest.toHttpRequest()
           val response: Response =
             runCatching { httpClient(request) }
-              .getOrElse { throwable ->
+              .getOrElse {
+                logger.error(it) { "❗️ $stepName: Exception making http Request" }
                 noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)
                 return@fold stepNameToReport +
                   (stepName to
                     StepReport(
                       request,
-                      httpFailure = throwable,
+                      responseInfo = failure(it),
                       postmanEnvironmentSnapshot = pm.environment.copy()
                     ))
               }
+
           val stepReport: StepReport =
             when {
               response.status.successful -> {
@@ -164,33 +187,50 @@
                     val responseConfig: ResponseConfig? =
                       getResponseConfigForStepName(stepName, responseConfigs)
                     val successType = responseConfig?.successType ?: Any::class.java as Type
-                    val responseObj = moshiReVoman.asA<Any>(response.bodyString(), successType)
-                    val validationResult = runCatching {
-                      responseConfig?.validationConfig?.let { validate(responseObj, it.prepare()) }
-                    }
-                    if (validationResult.isFailure) {
-                      logger.error(validationResult.exceptionOrNull()) {
-                        "❗️ $stepName: Exception while validating response"
-                      }
-                      noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)
-                    }
-                    StepReport(
-                      request,
-                      responseObj,
-                      responseObj.javaClass,
-                      response,
-                      testScriptJsResult.exceptionOrNull(),
-                      validationFailure = validationResult,
-                      postmanEnvironmentSnapshot = pm.environment.copy()
-                    )
+                    val marshallResult = runCatching {
+                      successType to moshiReVoman.asA<Any>(response.bodyString(), successType)
+                    }
+                    marshallResult
+                      .map {
+                        val validationResult = runCatching {
+                          responseConfig?.validationConfig?.let { vConfig ->
+                            validate(it.second, vConfig.prepare())
+                          }
+                        }
+                        if (validationResult.isFailure) {
+                          logger.error(validationResult.exceptionOrNull()) {
+                            "❗️ $stepName: Exception while validating response"
+                          }
+                          noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)
+                        }
+                        StepReport(
+                          request,
+                          success(ResponseInfo(marshallResult, response)),
+                          testScriptJsResult.exceptionOrNull(),
+                          validationFailure = validationResult,
+                          postmanEnvironmentSnapshot = pm.environment.copy()
+                        )
+                      }
+                      .getOrElse {
+                        logger.error(it) {
+                          "❗️ $stepName: Exception while marshalling response to $successType"
+                        }
+                        noFailure = isStepNameInPassList(stepName, haltOnAnyFailureExceptForSteps)
+                        StepReport(
+                          request,
+                          success(ResponseInfo(failure(it), response)),
+                          testScriptJsResult.exceptionOrNull(),
+                          postmanEnvironmentSnapshot = pm.environment.copy()
+                        )
+                      }
                   }
                   else -> {
                     // ! TODO gopala.akshintala 04/08/22: Support other non-JSON content types
                     StepReport(
                       request,
-                      response.bodyString(),
-                      String::class.java,
-                      response,
+                      success(
+                        ResponseInfo(success(String::class.java to response.bodyString()), response)
+                      ),
                       testScriptJsFailure = testScriptJsResult.exceptionOrNull(),
                       postmanEnvironmentSnapshot = pm.environment.copy()
                     )
@@ -205,11 +245,13 @@
                 when {
                   responseConfig?.errorType != null -> {
                     val errorType = responseConfig.errorType.rawType.kotlin
+                    // ! TODO 16/09/23 gopala.akshintala: handle marshall failure
                     val errorResponseObj = moshiReVoman.asA(response.bodyString(), errorType)
+                    // ! TODO 16/09/23 gopala.akshintala: Validate errorType
                     StepReport(
                       request,
                       errorResponseObj,
-                      errorResponseObj.javaClass,
+                      errorType,
                       response,
                       postmanEnvironmentSnapshot = pm.environment.copy()
                     )
Index: src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * ****************************************************************************\n * Copyright (c) 2023, Salesforce, Inc. All rights reserved. SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or\n * https://opensource.org/licenses/BSD-3-Clause\n * ****************************************************************************\n */\npackage com.salesforce.revoman.internal.postman\n\nimport com.github.underscore.U\nimport com.salesforce.revoman.internal.postman.state.Request\nimport com.salesforce.revoman.output.postman.PostmanEnvironment\nimport com.squareup.moshi.JsonClass\nimport com.squareup.moshi.Moshi\nimport com.squareup.moshi.adapter\n\n/**\n * SDK to be used in Javascript as per this API reference:\n * https://learning.postman.com/docs/writing-scripts/script-references/postman-sandbox-api-reference/\n */\ninternal class PostmanSDK {\n  @JvmField val environment: PostmanEnvironment<Any?> = PostmanEnvironment()\n  lateinit var request: Request\n  lateinit var response: Response\n\n  @Suppress(\"unused\")\n  fun setEnvironmentVariable(key: String, value: String) {\n    environment.set(key, value)\n  }\n\n  @OptIn(ExperimentalStdlibApi::class)\n  @JvmField\n  val xml2Json = Xml2Json { xml ->\n    Moshi.Builder().build().adapter<Map<*, *>>().fromJson(U.xmlToJson(xml))\n  }\n}\n\n@SuppressWarnings(\"kotlin:S6517\")\n@FunctionalInterface // DON'T REMOVE THIS. Polyglot won't work without this\ninternal fun interface Xml2Json {\n  @Suppress(\"unused\") fun xml2Json(xml: String): Map<*, *>?\n}\n\n@JsonClass(generateAdapter = true)\ndata class Response(val code: String, val status: String, val body: String)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt b/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt
--- a/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt	(date 1694942736668)
@@ -18,8 +18,9 @@
  * SDK to be used in Javascript as per this API reference:
  * https://learning.postman.com/docs/writing-scripts/script-references/postman-sandbox-api-reference/
  */
-internal class PostmanSDK {
+internal class PostmanSDK(
   @JvmField val environment: PostmanEnvironment<Any?> = PostmanEnvironment()
+) {
   lateinit var request: Request
   lateinit var response: Response
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"6ed80e62-f038-45bc-b42e-83dd15ec8dae\" name=\"Changes\" comment=\"Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CONTRIBUTING.adoc\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CONTRIBUTING.adoc\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/buildSrc/src/main/kotlin/Config.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/buildSrc/src/main/kotlin/Config.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/integrationTest/resources/pm-templates/pq/pq (rc).postman_collection.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/integrationTest/resources/pm-templates/pq/pq-with-rc.postman_collection.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand />\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Kotlin Class\" />\n        <option value=\"Kotlin File\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitRewordedCommitMessages\">\n    <option name=\"onto\" value=\"2e850249e1504ea662ab7167dee4c31375f42f4b\" />\n  </component>\n  <component name=\"GitToolBoxStore\">\n    <option name=\"projectConfigVersion\" value=\"5\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"jar://$USER_HOME$/.sdkman/candidates/gradle/8.3/lib/kotlin-stdlib-1.9.0.jar!/kotlin/collections/collections.kotlin_builtins\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jrt://$USER_HOME$/.sdkman/candidates/java/current!/java.base/sun/security/ssl/Alert.class\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/Library/Java/JavaVirtualMachines/azul-11.0.17/Contents/Home/lib/src.zip!/java.base/java/util/UUID.java\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/core-public/tools/Darwin/jdk/openjdk_17.0.5_17.38.22_x64/zulu-17.jdk/Contents/Home/lib/src.zip!/java.base/java/util/ArrayList.java\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/core-public/tools/Darwin/jdk/openjdk_17.0.5_17.38.22_x64/zulu-17.jdk/Contents/Home/lib/src.zip!/java.base/java/util/Objects.java\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/core-public/tools/Darwin/jdk/openjdk_17.0.5_17.38.22_x64/zulu-17.jdk/Contents/Home/lib/src.zip!/java.base/java/util/function/Consumer.java\" root0=\"SKIP_INSPECTION\" />\n    <setting file=\"jar://$USER_HOME$/core-public/tools/Darwin/jdk/openjdk_17.0.5_17.38.22_x64/zulu-17.jdk/Contents/Home/lib/src.zip!/java.base/sun/security/ssl/SSLHandshake.java\" root0=\"SKIP_INSPECTION\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHome\" value=\"$USER_HOME$/.sdkman/candidates/maven/current\" />\n        <option name=\"userSettingsFile\" value=\"$USER_HOME$/.m2/my-settings.xml\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 8\n}</component>\n  <component name=\"ProjectId\" id=\"2MtcuP1uPJEavgVrEkPJ6a62xPO\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"autoscrollFromSource\" value=\"true\" />\n    <option name=\"autoscrollToSource\" value=\"true\" />\n    <option name=\"flattenModules\" value=\"true\" />\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"openDirectoriesWithSingleClick\" value=\"true\" />\n    <option name=\"showExcludedFiles\" value=\"false\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n    <option name=\"sortKey\" value=\"BY_TIME_DESCENDING\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;FindInProjectState.directoryName&quot;: &quot;/Users/gopala.akshintala/code-clones/work/revoman-root&quot;,\n    &quot;FindInProjectState.isProjectScope&quot;: &quot;false&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;false&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;com.github.patou.gitmoji.display-icon&quot;: &quot;emoji&quot;,\n    &quot;com.github.patou.gitmoji.insert-in-cursor-position&quot;: &quot;true&quot;,\n    &quot;com.github.patou.gitmoji.text-after-unicode&quot;: &quot; &quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;ktor.last.update.timestamp&quot;: &quot;1684229451936&quot;,\n    &quot;last_directory_selection&quot;: &quot;/Users/gopala.akshintala/code-clones/work/revoman-root/src/test/kotlin/org/revcloud/revoman/internal&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/gopala.akshintala/code-clones/work/revoman-root&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.language.Kotlin&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"Push.Settings\">\n    <force-push-targets>\n      <force-push-target remote-path=\"origin\" branch=\"master\" />\n      <force-push-target remote-path=\"my-github\" branch=\"master\" />\n      <force-push-target remote-path=\"git-soma\" branch=\"master\" />\n    </force-push-targets>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/src/integrationTest/java/org/revcloud/revoman/integration/core/pq\" />\n      <recent name=\"$PROJECT_DIR$/docs/images\" />\n      <recent name=\"$PROJECT_DIR$/src/integrationTest/java/org/revcloud/revoman/integration\" />\n      <recent name=\"$PROJECT_DIR$/src/integrationTest\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/integrationTest/resources/pm-templates/pq\" />\n      <recent name=\"$PROJECT_DIR$/src/main/kotlin/org/revcloud/revoman/internal/postman\" />\n      <recent name=\"$PROJECT_DIR$/src/test/resources/pmCollection\" />\n      <recent name=\"$PROJECT_DIR$/images\" />\n      <recent name=\"$PROJECT_DIR$/src/main/kotlin\" />\n    </key>\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\n      <recent name=\"org.revcloud.revoman.internal.postman\" />\n      <recent name=\"org.revcloud.revoman.output\" />\n      <recent name=\"org.revcloud.revoman.internal.adapters\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"com.salesforce.revoman.output.postman\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"com.salesforce.revoman.output.postman\" />\n      <recent name=\"org.revcloud.revoman.internal\" />\n      <recent name=\"org.revcloud.revoman.internal.postman\" />\n    </key>\n  </component>\n  <component name=\"RunAnythingCache\">\n    <option name=\"myCommands\">\n      <command value=\"./gradlew spotlessApply\" />\n      <command value=\"gradle build\" />\n      <command value=\"gradle clean build --no-build-cache\" />\n      <command value=\"gradle test --tests org.revcloud.revoman.integration.pokemon.PokemonTest\" />\n      <command value=\"gradle generateLicenseReport\" />\n      <command value=\"gradle jar\" />\n      <command value=\"gradle clean build -x integrationTest\" />\n      <command value=\"gradle wrapper\" />\n      <command value=\"gradle integrationTest\" />\n      <command value=\"./gradlew integrationTest --tests com.salesforce.revoman.integration.pokemon.PokemonTest\" />\n      <command value=\"gradle clean build\" />\n      <command value=\"gradle publish\" />\n      <command value=\"gradle publish --no-configuration-cache\" />\n      <command value=\"gradle spotlessApply\" />\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Gradle.revoman-root [spotlessApply]\">\n    <configuration name=\"PostmanEnvironmentTest.multiLevelFiltering\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":test\" />\n            <option value=\"--tests\" />\n            <option value=\"&quot;com.salesforce.revoman.output.postman.PostmanEnvironmentTest.multiLevelFiltering&quot;\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>true</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"UtilsTest.deepFlattenItems with nested items\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":test\" />\n            <option value=\"--tests\" />\n            <option value=\"&quot;com.salesforce.revoman.internal.UtilsTest.deepFlattenItems with nested items&quot;\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>true</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"revoman-root [clean build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"clean\" />\n            <option value=\"build\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>false</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"revoman-root [publish]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"publish\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>false</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"revoman-root [spotlessApply]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"spotlessApply\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>false</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.revoman-root [spotlessApply]\" />\n        <item itemvalue=\"Gradle.revoman-root [publish]\" />\n        <item itemvalue=\"Gradle.PostmanEnvironmentTest.multiLevelFiltering\" />\n        <item itemvalue=\"Gradle.UtilsTest.deepFlattenItems with nested items\" />\n        <item itemvalue=\"Gradle.revoman-root [clean build]\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"6ed80e62-f038-45bc-b42e-83dd15ec8dae\" name=\"Changes\" comment=\"\" />\n      <created>1675501440620</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1675501440620</updated>\n      <workItem from=\"1678590544602\" duration=\"30000\" />\n      <workItem from=\"1678590599944\" duration=\"8967000\" />\n      <workItem from=\"1678696944514\" duration=\"22159000\" />\n      <workItem from=\"1678784357555\" duration=\"522000\" />\n      <workItem from=\"1678784883785\" duration=\"902000\" />\n      <workItem from=\"1678791484815\" duration=\"971000\" />\n      <workItem from=\"1678792762915\" duration=\"4060000\" />\n      <workItem from=\"1678800699624\" duration=\"25687000\" />\n      <workItem from=\"1679044049371\" duration=\"2200000\" />\n      <workItem from=\"1679046519811\" duration=\"1972000\" />\n      <workItem from=\"1680348478959\" duration=\"609000\" />\n      <workItem from=\"1680450988570\" duration=\"2377000\" />\n      <workItem from=\"1680509557567\" duration=\"3010000\" />\n      <workItem from=\"1680525007083\" duration=\"994000\" />\n      <workItem from=\"1680586816479\" duration=\"1333000\" />\n      <workItem from=\"1680686027312\" duration=\"4259000\" />\n      <workItem from=\"1681225223130\" duration=\"6948000\" />\n      <workItem from=\"1681237879915\" duration=\"816000\" />\n      <workItem from=\"1682658888606\" duration=\"3025000\" />\n      <workItem from=\"1683192737504\" duration=\"60000\" />\n      <workItem from=\"1683362693852\" duration=\"17000\" />\n      <workItem from=\"1684047755113\" duration=\"3805000\" />\n      <workItem from=\"1684229453813\" duration=\"40000\" />\n      <workItem from=\"1684988569782\" duration=\"1115000\" />\n      <workItem from=\"1686581584399\" duration=\"85000\" />\n      <workItem from=\"1686906801549\" duration=\"857000\" />\n      <workItem from=\"1686919111921\" duration=\"7409000\" />\n      <workItem from=\"1686997061583\" duration=\"486000\" />\n      <workItem from=\"1687003885577\" duration=\"2162000\" />\n      <workItem from=\"1687078394870\" duration=\"417000\" />\n      <workItem from=\"1687081723783\" duration=\"1164000\" />\n      <workItem from=\"1687085698998\" duration=\"1269000\" />\n      <workItem from=\"1687087020828\" duration=\"7247000\" />\n      <workItem from=\"1687104946600\" duration=\"1182000\" />\n      <workItem from=\"1687267290812\" duration=\"682000\" />\n      <workItem from=\"1687337062943\" duration=\"10117000\" />\n      <workItem from=\"1687348482189\" duration=\"5993000\" />\n      <workItem from=\"1687410843485\" duration=\"1257000\" />\n      <workItem from=\"1687412132916\" duration=\"8919000\" />\n      <workItem from=\"1687424389791\" duration=\"16227000\" />\n      <workItem from=\"1687661351845\" duration=\"5821000\" />\n      <workItem from=\"1687668106267\" duration=\"8087000\" />\n      <workItem from=\"1687687483344\" duration=\"13575000\" />\n      <workItem from=\"1687712236042\" duration=\"821000\" />\n      <workItem from=\"1687745133379\" duration=\"5237000\" />\n      <workItem from=\"1688035052884\" duration=\"2810000\" />\n      <workItem from=\"1688621834721\" duration=\"1511000\" />\n      <workItem from=\"1688710047570\" duration=\"19000\" />\n      <workItem from=\"1688710079242\" duration=\"5790000\" />\n      <workItem from=\"1688814361018\" duration=\"15000\" />\n      <workItem from=\"1688872101934\" duration=\"9797000\" />\n      <workItem from=\"1688914996485\" duration=\"2226000\" />\n      <workItem from=\"1688961080108\" duration=\"13180000\" />\n      <workItem from=\"1689074663527\" duration=\"414000\" />\n      <workItem from=\"1689075111283\" duration=\"2246000\" />\n      <workItem from=\"1689250757374\" duration=\"207000\" />\n      <workItem from=\"1689251013488\" duration=\"3245000\" />\n      <workItem from=\"1689257951833\" duration=\"2815000\" />\n      <workItem from=\"1689317232424\" duration=\"1450000\" />\n      <workItem from=\"1689318975789\" duration=\"2295000\" />\n      <workItem from=\"1689322332057\" duration=\"186000\" />\n      <workItem from=\"1689322790115\" duration=\"724000\" />\n      <workItem from=\"1689336785825\" duration=\"1250000\" />\n      <workItem from=\"1689352890318\" duration=\"1977000\" />\n      <workItem from=\"1689388147258\" duration=\"6665000\" />\n      <workItem from=\"1689681920923\" duration=\"89000\" />\n      <workItem from=\"1689682447362\" duration=\"1929000\" />\n      <workItem from=\"1689685381271\" duration=\"21000\" />\n      <workItem from=\"1689685923065\" duration=\"730000\" />\n      <workItem from=\"1689695904857\" duration=\"615000\" />\n      <workItem from=\"1689933206088\" duration=\"30000\" />\n      <workItem from=\"1691165201785\" duration=\"834000\" />\n      <workItem from=\"1691395238088\" duration=\"1104000\" />\n      <workItem from=\"1691489720115\" duration=\"7517000\" />\n      <workItem from=\"1691567925551\" duration=\"1579000\" />\n      <workItem from=\"1691576652192\" duration=\"1278000\" />\n      <workItem from=\"1691674208265\" duration=\"2875000\" />\n      <workItem from=\"1691760279396\" duration=\"1412000\" />\n      <workItem from=\"1692174996813\" duration=\"251000\" />\n      <workItem from=\"1692264031049\" duration=\"1327000\" />\n      <workItem from=\"1692265658449\" duration=\"886000\" />\n      <workItem from=\"1692327563220\" duration=\"4218000\" />\n      <workItem from=\"1692957726218\" duration=\"2677000\" />\n      <workItem from=\"1692962770948\" duration=\"4301000\" />\n      <workItem from=\"1693033168081\" duration=\"1256000\" />\n      <workItem from=\"1693040380344\" duration=\"3784000\" />\n      <workItem from=\"1693058342047\" duration=\"18047000\" />\n      <workItem from=\"1693141962619\" duration=\"2950000\" />\n      <workItem from=\"1693200395333\" duration=\"8015000\" />\n      <workItem from=\"1693211241056\" duration=\"17053000\" />\n      <workItem from=\"1693306497236\" duration=\"2257000\" />\n      <workItem from=\"1693328081855\" duration=\"568000\" />\n      <workItem from=\"1693380127104\" duration=\"7170000\" />\n      <workItem from=\"1693461658587\" duration=\"26641000\" />\n      <workItem from=\"1693653702895\" duration=\"2481000\" />\n      <workItem from=\"1693709086599\" duration=\"18000\" />\n      <workItem from=\"1693709238189\" duration=\"15000\" />\n      <workItem from=\"1693709457346\" duration=\"18000\" />\n      <workItem from=\"1693709525092\" duration=\"2353000\" />\n      <workItem from=\"1693719231610\" duration=\"138000\" />\n      <workItem from=\"1693721347086\" duration=\"1599000\" />\n      <workItem from=\"1693723148217\" duration=\"1049000\" />\n      <workItem from=\"1693725648689\" duration=\"618000\" />\n      <workItem from=\"1693728545980\" duration=\"7323000\" />\n      <workItem from=\"1693757599589\" duration=\"392000\" />\n      <workItem from=\"1693926034202\" duration=\"1021000\" />\n      <workItem from=\"1693993455252\" duration=\"573000\" />\n      <workItem from=\"1694338166647\" duration=\"14891000\" />\n      <workItem from=\"1694423556175\" duration=\"2393000\" />\n      <workItem from=\"1694500733945\" duration=\"1123000\" />\n      <workItem from=\"1694509958633\" duration=\"685000\" />\n      <workItem from=\"1694578560318\" duration=\"5459000\" />\n      <workItem from=\"1694585340117\" duration=\"1460000\" />\n      <workItem from=\"1694592993299\" duration=\"418000\" />\n      <workItem from=\"1694593977353\" duration=\"3184000\" />\n      <workItem from=\"1694604189676\" duration=\"1531000\" />\n      <workItem from=\"1694755262231\" duration=\"6965000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"- Fixed moshiReVoman&#10;- Added module-info.java to integrationTest module\">\n      <created>1678595183319</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678595183319</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Release 0.5.5&#10;- Return test script JS errors in StepReport\">\n      <created>1678600307914</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678600307914</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Release 0.5.6&#10;- Replace regex recursively in variables&#10;- Upgrade Kotlin to 1.8.10&#10;- Upgrade moshi to 0.21.0\">\n      <created>1678707138886</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678707138886</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Release 0.5.6&#10;- Replace regex recursively in variables&#10;- Upgrade Kotlin to 1.8.10&#10;- Upgrade moshi to 0.21.0\">\n      <created>1678727377127</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678727377127</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Make dynamicVariableGenerator injectable\">\n      <created>1678728052733</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678728052733</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Remove module-info.java from integrationTest\">\n      <created>1678802112799</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678802112799</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Release 0.6.0&#10;- Regex replacement for variables&#10;- Replace JavaHttpClient with ApacheClient\">\n      <created>1678971588738</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1678971588738</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"module-info.java cleanup&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1679036982795</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679036982795</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Release 0.6.2&#10;- Upgrade Dependencies&#10;- Remove kotest as it has conflicting jar&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1679045277768</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679045277768</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Release 0.6.2.1&#10;- Exclude hamcrest from vador&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1679051792142</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679051792142</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Release 0.6.2.1&#10;- Exclude hamcrest from vador&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1679051827196</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679051827196</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Add gradle wrapper&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1680082621319</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680082621319</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Add instructions to add Gradle credentials in CONTRIBUTING.adoc&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1680451071165</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680451071165</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Add instructions to add Gradle credentials in CONTRIBUTING.adoc&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1680513595094</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680513595094</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Moshi disable proguard&#10;&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1681238075571</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1681238075571</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"- Migrate to Gradle 8.1&#10;- Migrate to Kover 0.7.0-Beta&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <created>1682662367189</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682662367190</updated>\n    </task>\n    <task id=\"LOCAL-00065\" summary=\"Add more convenience functions to Rundown&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1692328952642</created>\n      <option name=\"number\" value=\"00065\" />\n      <option name=\"presentableId\" value=\"LOCAL-00065\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1692328952643</updated>\n    </task>\n    <task id=\"LOCAL-00066\" summary=\"Release 0.9.8&#10;- Change ReadFile to use Guava&#10;- HookConfig to supply hooks&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1692973920803</created>\n      <option name=\"number\" value=\"00066\" />\n      <option name=\"presentableId\" value=\"LOCAL-00066\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1692973920804</updated>\n    </task>\n    <task id=\"LOCAL-00067\" summary=\"- Migrate to use ResponseConfig&#10;- Upgrade Kotlin-logging-jvm to 5.1.0&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693109417335</created>\n      <option name=\"number\" value=\"00067\" />\n      <option name=\"presentableId\" value=\"LOCAL-00067\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693109417336</updated>\n    </task>\n    <task id=\"LOCAL-00068\" summary=\"Release 0.10.0&#10;- Change package name&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693109831759</created>\n      <option name=\"number\" value=\"00068\" />\n      <option name=\"presentableId\" value=\"LOCAL-00068\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693109831759</updated>\n    </task>\n    <task id=\"LOCAL-00069\" summary=\"Change hooks to take `Set&lt;Set&lt;HookConfig&gt;&gt;`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693289738002</created>\n      <option name=\"number\" value=\"00069\" />\n      <option name=\"presentableId\" value=\"LOCAL-00069\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693289738002</updated>\n    </task>\n    <task id=\"LOCAL-00070\" summary=\"Change responseConfig to take `Set&lt;Set&lt;HookConfig&gt;&gt;`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693290076691</created>\n      <option name=\"number\" value=\"00070\" />\n      <option name=\"presentableId\" value=\"LOCAL-00070\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693290076691</updated>\n    </task>\n    <task id=\"LOCAL-00071\" summary=\"Release 0.11.0&#10;- Change postman sdk to store any datatype&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693304520982</created>\n      <option name=\"number\" value=\"00071\" />\n      <option name=\"presentableId\" value=\"LOCAL-00071\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693304520982</updated>\n    </task>\n    <task id=\"LOCAL-00072\" summary=\"Release 0.11.1&#10;- Add `getValuesForKeysNotEndingWith`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693325969131</created>\n      <option name=\"number\" value=\"00072\" />\n      <option name=\"presentableId\" value=\"LOCAL-00072\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693325969131</updated>\n    </task>\n    <task id=\"LOCAL-00073\" summary=\"Release 0.11.2&#10;- Added some env utils&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693413049887</created>\n      <option name=\"number\" value=\"00073\" />\n      <option name=\"presentableId\" value=\"LOCAL-00073\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693413049887</updated>\n    </task>\n    <task id=\"LOCAL-00074\" summary=\"Release 0.11.2&#10;- Added some env utils&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693413058874</created>\n      <option name=\"number\" value=\"00074\" />\n      <option name=\"presentableId\" value=\"LOCAL-00074\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693413058874</updated>\n    </task>\n    <task id=\"LOCAL-00075\" summary=\"Release 0.11.2&#10;- Added some env utils&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693413341399</created>\n      <option name=\"number\" value=\"00075\" />\n      <option name=\"presentableId\" value=\"LOCAL-00075\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693413341399</updated>\n    </task>\n    <task id=\"LOCAL-00076\" summary=\"Release 0.11.3&#10;- getEnvironment returns a mutable copy&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693483458684</created>\n      <option name=\"number\" value=\"00076\" />\n      <option name=\"presentableId\" value=\"LOCAL-00076\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693483458684</updated>\n    </task>\n    <task id=\"LOCAL-00077\" summary=\"Release 0.11.3&#10;- getEnvironment returns a mutable copy&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693483668049</created>\n      <option name=\"number\" value=\"00077\" />\n      <option name=\"presentableId\" value=\"LOCAL-00077\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693483668049</updated>\n    </task>\n    <task id=\"LOCAL-00078\" summary=\"Release 0.11.3&#10;Bug fixes for getEnv, and method renaming&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693497114264</created>\n      <option name=\"number\" value=\"00078\" />\n      <option name=\"presentableId\" value=\"LOCAL-00078\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693497114264</updated>\n    </task>\n    <task id=\"LOCAL-00079\" summary=\"Release 0.11.5&#10;Bug fixes for getEnv, and method renaming&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693501553590</created>\n      <option name=\"number\" value=\"00079\" />\n      <option name=\"presentableId\" value=\"LOCAL-00079\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693501553590</updated>\n    </task>\n    <task id=\"LOCAL-00080\" summary=\"SpotlessApply&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693504183748</created>\n      <option name=\"number\" value=\"00080\" />\n      <option name=\"presentableId\" value=\"LOCAL-00080\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693504183748</updated>\n    </task>\n    <task id=\"LOCAL-00081\" summary=\"Release 0.11.6&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693505097246</created>\n      <option name=\"number\" value=\"00081\" />\n      <option name=\"presentableId\" value=\"LOCAL-00081\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693505097246</updated>\n    </task>\n    <task id=\"LOCAL-00082\" summary=\"Release 0.11.7&#10;- Bug fix to replace regex in key for environment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693542284302</created>\n      <option name=\"number\" value=\"00082\" />\n      <option name=\"presentableId\" value=\"LOCAL-00082\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693542284302</updated>\n    </task>\n    <task id=\"LOCAL-00083\" summary=\"Add BAZEL files&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693553727751</created>\n      <option name=\"number\" value=\"00083\" />\n      <option name=\"presentableId\" value=\"LOCAL-00083\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693553727751</updated>\n    </task>\n    <task id=\"LOCAL-00084\" summary=\"Upgrade gradle wrapper to 8.3.2&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693553850357</created>\n      <option name=\"number\" value=\"00084\" />\n      <option name=\"presentableId\" value=\"LOCAL-00084\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693553850357</updated>\n    </task>\n    <task id=\"LOCAL-00085\" summary=\"Documentation update&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693709001132</created>\n      <option name=\"number\" value=\"00085\" />\n      <option name=\"presentableId\" value=\"LOCAL-00085\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693709001133</updated>\n    </task>\n    <task id=\"LOCAL-00086\" summary=\"Documentation update&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693736988401</created>\n      <option name=\"number\" value=\"00086\" />\n      <option name=\"presentableId\" value=\"LOCAL-00086\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693736988402</updated>\n    </task>\n    <task id=\"LOCAL-00087\" summary=\"Documentation update&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693738338302</created>\n      <option name=\"number\" value=\"00087\" />\n      <option name=\"presentableId\" value=\"LOCAL-00087\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693738338302</updated>\n    </task>\n    <task id=\"LOCAL-00088\" summary=\"Make nexus creds nullable&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1693757991333</created>\n      <option name=\"number\" value=\"00088\" />\n      <option name=\"presentableId\" value=\"LOCAL-00088\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1693757991334</updated>\n    </task>\n    <task id=\"LOCAL-00089\" summary=\"Release: 0.12.0&#10;Hooks accept CheckedRunnable&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694339567018</created>\n      <option name=\"number\" value=\"00089\" />\n      <option name=\"presentableId\" value=\"LOCAL-00089\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694339567019</updated>\n    </task>\n    <task id=\"LOCAL-00090\" summary=\"Release: 0.12.0&#10;Hooks accept CheckedRunnable&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694340231992</created>\n      <option name=\"number\" value=\"00090\" />\n      <option name=\"presentableId\" value=\"LOCAL-00090\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694340231992</updated>\n    </task>\n    <task id=\"LOCAL-00091\" summary=\"Delete old BS tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694352826187</created>\n      <option name=\"number\" value=\"00091\" />\n      <option name=\"presentableId\" value=\"LOCAL-00091\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694352826187</updated>\n    </task>\n    <task id=\"LOCAL-00092\" summary=\"Release 0.13.0&#10;- StepReport stores env snapshot&#10;- StepName passed into hooks&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694369053590</created>\n      <option name=\"number\" value=\"00092\" />\n      <option name=\"presentableId\" value=\"LOCAL-00092\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694369053590</updated>\n    </task>\n    <task id=\"LOCAL-00093\" summary=\"Release 0.13.0&#10;- StepReport stores env snapshot&#10;- StepName passed into hooks&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694369495504</created>\n      <option name=\"number\" value=\"00093\" />\n      <option name=\"presentableId\" value=\"LOCAL-00093\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694369495504</updated>\n    </task>\n    <task id=\"LOCAL-00094\" summary=\"Release 0.13.0&#10;- StepReport stores env snapshot&#10;- StepName passed into hooks&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694369660653</created>\n      <option name=\"number\" value=\"00094\" />\n      <option name=\"presentableId\" value=\"LOCAL-00094\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694369660653</updated>\n    </task>\n    <task id=\"LOCAL-00095\" summary=\"- Only include Pokémon test for automation&#10;- Minor doc edits&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694424681759</created>\n      <option name=\"number\" value=\"00095\" />\n      <option name=\"presentableId\" value=\"LOCAL-00095\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694424681760</updated>\n    </task>\n    <task id=\"LOCAL-00096\" summary=\"Release 0.14.0&#10;- Add ImmutableEnv for only assertion&#10;- Add &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694582989179</created>\n      <option name=\"number\" value=\"00096\" />\n      <option name=\"presentableId\" value=\"LOCAL-00096\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694582989179</updated>\n    </task>\n    <task id=\"LOCAL-00097\" summary=\"Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1694596346692</created>\n      <option name=\"number\" value=\"00097\" />\n      <option name=\"presentableId\" value=\"LOCAL-00097\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1694596346692</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"98\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/master\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n        <entry key=\"User\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"*\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"Add more convenience functions to Rundown&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.9.8&#10;- Change ReadFile to use Guava&#10;- HookConfig to supply hooks&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"- Migrate to use ResponseConfig&#10;- Upgrade Kotlin-logging-jvm to 5.1.0&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.10.0&#10;- Change package name&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Change hooks to take `Set&lt;Set&lt;HookConfig&gt;&gt;`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Change responseConfig to take `Set&lt;Set&lt;HookConfig&gt;&gt;`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.0&#10;- Change postman sdk to store any datatype&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.1&#10;- Add `getValuesForKeysNotEndingWith`&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.2&#10;- Added some env utils&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.3&#10;- getEnvironment returns a mutable copy&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.3&#10;Bug fixes for getEnv, and method renaming&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.5&#10;Bug fixes for getEnv, and method renaming&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"SpotlessApply&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.6&#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.11.7&#10;- Bug fix to replace regex in key for environment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Add BAZEL files&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Upgrade gradle wrapper to 8.3.2&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Documentation update&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Make nexus creds nullable&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release: 0.12.0&#10;Hooks accept CheckedRunnable&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Delete old BS tests&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.13.0&#10;- StepReport stores env snapshot&#10;- StepName passed into hooks&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"- Only include Pokémon test for automation&#10;- Minor doc edits&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.14.0&#10;- Add ImmutableEnv for only assertion&#10;- Add &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <MESSAGE value=\"Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>\n          <line>90</line>\n          <option name=\"timeStamp\" value=\"15\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>\n          <line>190</line>\n          <option name=\"timeStamp\" value=\"22\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>\n          <line>185</line>\n          <option name=\"timeStamp\" value=\"25\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>\n          <line>156</line>\n          <properties>\n            <option name=\"lambda-ordinal\" value=\"-1\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"27\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/pokemon/PokemonTest.java</url>\n          <line>68</line>\n          <option name=\"timeStamp\" value=\"20\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/pokemon/PokemonTest.java</url>\n          <line>57</line>\n          <option name=\"timeStamp\" value=\"23\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"org.revcloud.revoman.output.StepReport\" memberName=\"responseObj\" />\n      </pinned-members>\n    </pin-to-top-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/.idea/workspace.xml	(date 1694943151162)
@@ -4,14 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6ed80e62-f038-45bc-b42e-83dd15ec8dae" name="Changes" comment="Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;">
+    <list default="true" id="6ed80e62-f038-45bc-b42e-83dd15ec8dae" name="Changes" comment="Release 0.15.0&#10;- Add hookExceptions to stepNameToReport&#10;- Consider ValidationFailure for `noFailure` check&#10;&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CONTRIBUTING.adoc" beforeDir="false" afterPath="$PROJECT_DIR$/CONTRIBUTING.adoc" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/buildSrc/src/main/kotlin/Config.kt" beforeDir="false" afterPath="$PROJECT_DIR$/buildSrc/src/main/kotlin/Config.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/integrationTest/resources/pm-templates/pq/pq (rc).postman_collection.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/integrationTest/resources/pm-templates/pq/pq-with-rc.postman_collection.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/internal/Utils.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/internal/postman/PostmanSDK.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/Rundown.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/output/postman/PostmanEnvironment.kt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,6 +65,9 @@
     <option name="projectConfigVersion" value="5" />
   </component>
   <component name="HighlightingSettingsPerFile">
+    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.http4k/http4k-client-apache/5.8.0.0/af9cd5d4d07b218e81e46ac7f59343ea8b09b217/http4k-client-apache-5.8.0.0-sources.jar!/org/http4k/client/ApacheClient.kt" root0="SKIP_INSPECTION" />
+    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.http4k/http4k-format-moshi/5.8.0.0/3d23ceae254e084426d6e39cc0245a3febd246e6/http4k-format-moshi-5.8.0.0-sources.jar!/org/http4k/format/ConfigurableMoshi.kt" root0="SKIP_INSPECTION" />
+    <setting file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-common/1.9.10/9960410cb3852df9251d5b30927ff2070bfb453/kotlin-stdlib-common-1.9.10-sources.jar!/kotlin/collections/Maps.kt" root0="SKIP_INSPECTION" />
     <setting file="jar://$USER_HOME$/.sdkman/candidates/gradle/8.3/lib/kotlin-stdlib-1.9.0.jar!/kotlin/collections/collections.kotlin_builtins" root0="SKIP_INSPECTION" />
     <setting file="jrt://$USER_HOME$/.sdkman/candidates/java/current!/java.base/sun/security/ssl/Alert.class" root0="SKIP_INSPECTION" />
     <setting file="jar://$USER_HOME$/Library/Java/JavaVirtualMachines/azul-11.0.17/Contents/Home/lib/src.zip!/java.base/java/util/UUID.java" root0="SKIP_INSPECTION" />
@@ -181,15 +184,16 @@
       <command value="gradle clean build -x integrationTest" />
       <command value="gradle wrapper" />
       <command value="gradle integrationTest" />
-      <command value="./gradlew integrationTest --tests com.salesforce.revoman.integration.pokemon.PokemonTest" />
+      <command value="gradle clean --configuration-cache" />
       <command value="gradle clean build" />
       <command value="gradle publish" />
       <command value="gradle publish --no-configuration-cache" />
+      <command value="./gradlew integrationTest --tests com.salesforce.revoman.integration.pokemon.PokemonTest" />
       <command value="gradle spotlessApply" />
     </option>
   </component>
   <component name="RunManager" selected="Gradle.revoman-root [spotlessApply]">
-    <configuration name="PostmanEnvironmentTest.multiLevelFiltering" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="revoman-root [clean build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -200,44 +204,41 @@
         </option>
         <option name="taskNames">
           <list>
-            <option value=":test" />
-            <option value="--tests" />
-            <option value="&quot;com.salesforce.revoman.output.postman.PostmanEnvironmentTest.multiLevelFiltering&quot;" />
+            <option value="clean" />
+            <option value="build" />
           </list>
         </option>
         <option name="vmOptions" />
       </ExternalSystemSettings>
-      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
+      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
-      <RunAsTest>true</RunAsTest>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
-    <configuration name="UtilsTest.deepFlattenItems with nested items" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="revoman-root [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="externalSystemIdString" value="GRADLE" />
-        <option name="scriptParameters" value="" />
+        <option name="scriptParameters" value="--configuration-cache" />
         <option name="taskDescriptions">
           <list />
         </option>
         <option name="taskNames">
           <list>
-            <option value=":test" />
-            <option value="--tests" />
-            <option value="&quot;com.salesforce.revoman.internal.UtilsTest.deepFlattenItems with nested items&quot;" />
+            <option value="clean" />
           </list>
         </option>
         <option name="vmOptions" />
       </ExternalSystemSettings>
-      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
+      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
-      <RunAsTest>true</RunAsTest>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
-    <configuration name="revoman-root [clean build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="revoman-root [integrationTest --tests com.salesforce.revoman.integration.pokemon.PokemonTest]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -248,8 +249,9 @@
         </option>
         <option name="taskNames">
           <list>
-            <option value="clean" />
-            <option value="build" />
+            <option value="integrationTest" />
+            <option value="--tests" />
+            <option value="com.salesforce.revoman.integration.pokemon.PokemonTest" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -306,11 +308,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Gradle.revoman-root [integrationTest --tests com.salesforce.revoman.integration.pokemon.PokemonTest]" />
+        <item itemvalue="Gradle.revoman-root [clean build]" />
+        <item itemvalue="Gradle.revoman-root [clean]" />
         <item itemvalue="Gradle.revoman-root [spotlessApply]" />
         <item itemvalue="Gradle.revoman-root [publish]" />
-        <item itemvalue="Gradle.PostmanEnvironmentTest.multiLevelFiltering" />
-        <item itemvalue="Gradle.UtilsTest.deepFlattenItems with nested items" />
-        <item itemvalue="Gradle.revoman-root [clean build]" />
       </list>
     </recent_temporary>
   </component>
@@ -438,7 +440,11 @@
       <workItem from="1694592993299" duration="418000" />
       <workItem from="1694593977353" duration="3184000" />
       <workItem from="1694604189676" duration="1531000" />
-      <workItem from="1694755262231" duration="6965000" />
+      <workItem from="1694755262231" duration="7869000" />
+      <workItem from="1694768817881" duration="1036000" />
+      <workItem from="1694781469698" duration="14239000" />
+      <workItem from="1694918129213" duration="4055000" />
+      <workItem from="1694942510390" duration="613000" />
     </task>
     <task id="LOCAL-00001" summary="- Fixed moshiReVoman&#10;- Added module-info.java to integrationTest module">
       <created>1678595183319</created>
@@ -551,14 +557,6 @@
       <option name="presentableId" value="LOCAL-00016" />
       <option name="project" value="LOCAL" />
       <updated>1682662367190</updated>
-    </task>
-    <task id="LOCAL-00065" summary="Add more convenience functions to Rundown&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;">
-      <option name="closed" value="true" />
-      <created>1692328952642</created>
-      <option name="number" value="00065" />
-      <option name="presentableId" value="LOCAL-00065" />
-      <option name="project" value="LOCAL" />
-      <updated>1692328952643</updated>
     </task>
     <task id="LOCAL-00066" summary="Release 0.9.8&#10;- Change ReadFile to use Guava&#10;- HookConfig to supply hooks&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;">
       <option name="closed" value="true" />
@@ -816,7 +814,15 @@
       <option name="project" value="LOCAL" />
       <updated>1694596346692</updated>
     </task>
-    <option name="localTasksCounter" value="98" />
+    <task id="LOCAL-00098" summary="Release 0.15.0&#10;- Add hookExceptions to stepNameToReport&#10;- Consider ValidationFailure for `noFailure` check&#10;&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;">
+      <option name="closed" value="true" />
+      <created>1694768519544</created>
+      <option name="number" value="00098" />
+      <option name="presentableId" value="LOCAL-00098" />
+      <option name="project" value="LOCAL" />
+      <updated>1694768519545</updated>
+    </task>
+    <option name="localTasksCounter" value="99" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -872,7 +878,6 @@
   <component name="VcsManagerConfiguration">
     <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
     <option name="CHECK_NEW_TODO" value="false" />
-    <MESSAGE value="Add more convenience functions to Rundown&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
     <MESSAGE value="Release 0.9.8&#10;- Change ReadFile to use Guava&#10;- HookConfig to supply hooks&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
     <MESSAGE value="- Migrate to use ResponseConfig&#10;- Upgrade Kotlin-logging-jvm to 5.1.0&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
     <MESSAGE value="Release 0.10.0&#10;- Change package name&#10; &#10; &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
@@ -897,33 +902,16 @@
     <MESSAGE value="- Only include Pokémon test for automation&#10;- Minor doc edits&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
     <MESSAGE value="Release 0.14.0&#10;- Add ImmutableEnv for only assertion&#10;- Add &#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
     <MESSAGE value="Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
-    <option name="LAST_COMMIT_MESSAGE" value="Release 0.14.1&#10;- Fix filtering in PostmanEnvironment&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
+    <MESSAGE value="Release 0.15.0&#10;- Add hookExceptions to stepNameToReport&#10;- Consider ValidationFailure for `noFailure` check&#10;&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
+    <option name="LAST_COMMIT_MESSAGE" value="Release 0.15.0&#10;- Add hookExceptions to stepNameToReport&#10;- Consider ValidationFailure for `noFailure` check&#10;&#10;&#10;Signed-off-by: Gopal S Akshintala &lt;gopala.akshintala@salesforce.com&gt;" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" type="kotlin-line">
           <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>
-          <line>90</line>
-          <option name="timeStamp" value="15" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="kotlin-line">
-          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>
-          <line>190</line>
+          <line>257</line>
           <option name="timeStamp" value="22" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="kotlin-line">
-          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>
-          <line>185</line>
-          <option name="timeStamp" value="25" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="kotlin-line">
-          <url>file://$PROJECT_DIR$/src/main/kotlin/com/salesforce/revoman/ReVoman.kt</url>
-          <line>156</line>
-          <properties>
-            <option name="lambda-ordinal" value="-1" />
-          </properties>
-          <option name="timeStamp" value="27" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/integrationTest/java/com/salesforce/revoman/integration/pokemon/PokemonTest.java</url>
Index: src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*******************************************************************************\n * Copyright (c) 2023, Salesforce, Inc.\n *  All rights reserved.\n *  SPDX-License-Identifier: BSD-3-Clause\n *  For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n ******************************************************************************/\n\npackage com.salesforce.revoman.integration.core.pq;\n\nimport static com.salesforce.revoman.input.HookConfig.post;\nimport static com.salesforce.revoman.input.HookConfig.pre;\nimport static com.salesforce.revoman.input.ResponseConfig.unmarshallSuccessResponse;\nimport static com.salesforce.revoman.input.ResponseConfig.validateIfSuccess;\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport com.salesforce.revoman.ReVoman;\nimport com.salesforce.revoman.input.Kick;\nimport com.salesforce.revoman.output.Rundown;\nimport com.salesforce.vador.config.ValidationConfig;\nimport java.util.Map;\nimport java.util.Random;\nimport java.util.Set;\nimport kotlin.collections.MapsKt;\nimport org.junit.jupiter.api.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nclass PQE2ETest {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(PQE2ETest.class);\n\n  /**\n   * PQ E2E Flow\n   *\n   * <ul>\n   *   <li>pq-create: qli+qlr\n   *   <li>query-quote-and-related-records\n   *   <li>pq-update: qli(post+patch+delete)\n   *   <li>pq-update: qli(post+patch)\n   *   <li>pq-update: qli(all post)\n   *   <li>pq-update: qli+qlr(all post\n   *   <li>pq-update: qli(all patch)\n   *   <li>pq-update: qli(all delete)\n   *   <li>pq-update: qli(post+delete)\n   * </ul>\n   */\n  @Test\n  void revUpPQ() {\n    final var pqRespValidationConfig =\n        ValidationConfig.<PlaceQuoteOutputRepresentation, String>toValidate()\n            .withValidator(\n                (resp -> Boolean.TRUE.equals(resp.getSuccess()) ? \"success\" : \"PQ failed\"),\n                \"success\");\n    // ! TODO 24/06/23 gopala.akshintala: Need fully qualified names as POST and GET reside next to\n    // ! each-other. Improve this using Regex\n    final var unsuccessfulStepsException =\n        Set.of(\n            \"POST: setup|>tax-setup|>MockTaxAdapter\",\n            \"POST: setup|>tax-setup|>TaxEngineProvider\",\n            \"POST: setup|>product-setup|>pre|>Proration Policy\",\n            \"POST: setup|>product-setup|>OneTime|>OneTime PSM\",\n            \"POST: setup|>product-setup|>Evergreen|>Evergreen PSM\",\n            \"POST: setup|>product-setup|>Termed|>Termed PSM\",\n            \"POST: setup|>bundle-setup|>ProductRelationshipType\");\n    // tag::pq-e2e-with-revoman-config-demo[]\n    final var pqRunDown =\n        ReVoman.revUp( // <1>\n            Kick.configure()\n                .templatePath(\"pm-templates/pq/pq-with-rc.postman_collection.json\") // <2>\n                .environmentPath(\"pm-templates/pq/pq-env.postman_environment.json\") // <3>\n                .dynamicEnvironment( // <4>\n                    Map.of(\n                        \"$quoteFieldsToQuery\", \"LineItemCount, CalculationStatus\",\n                        \"$qliFieldsToQuery\", \"Id, Product2Id\",\n                        \"$qlrFieldsToQuery\", \"Id, QuoteId, MainQuoteLineId, AssociatedQuoteLineId\"))\n                .customDynamicVariable( // <5>\n                    \"$pricingPref\",\n                    ignore ->\n                        PricingPref.values()[new Random().nextInt(PricingPref.values().length)]\n                            .name())\n                .hooks( // <6>\n                    post(\n                        \"password-reset\",\n                        (stepName, rundown) ->\n                            LOGGER.info(\n                                \"Step count: {} executed including this step: {}\",\n                                rundown.stepNameToReport.size(),\n                                stepName)),\n                    pre(\n                        \"pq-create-with-bundles\",\n                        (stepName, rundown) ->\n                            LOGGER.info(\n                                \"Step count: {} executed before this step: {}\",\n                                rundown.stepNameToReport.size(),\n                                stepName)),\n                    post(\"query-quote-and-related-records\", PQE2ETest::assertAfterPQCreate),\n                    post(\n                        Set.of(\n                            \"pq-create: qli+qlr\",\n                            \"pq-update: qli(post+patch+ delete)\",\n                            \"pq-update: qli(post+patch)\",\n                            \"pq-update: qli(all post)\",\n                            \"pq-update: qli+qlr(all post)\",\n                            \"pq-update: qli(all patch)\",\n                            \"pq-update: qli(all delete)\",\n                            \"pq-update: qli(post+delete)\"),\n                        (stepName, rundown) -> {\n                          LOGGER.info(\n                              \"Waiting after Step: {} for the Quote: {} to get processed\",\n                              stepName,\n                              rundown.mutableEnv.getString(\"quoteId\"));\n                          // ! CAUTION 10/09/23 gopala.akshintala: This test can be flaky until\n                          // polling is implemented\n                          Thread.sleep(10000);\n                        }))\n                .haltOnAnyFailureExceptForSteps(unsuccessfulStepsException) // <7>\n                .responseConfig( // <8>\n                    unmarshallSuccessResponse(\"quote-related-records\", CompositeResponse.class),\n                    validateIfSuccess( // <9>\n                        \"pq-create-with-bundles\",\n                        PlaceQuoteOutputRepresentation.class,\n                        pqRespValidationConfig))\n                .insecureHttp(true) // <10>\n                .off()); // Kick-off\n    // end::pq-e2e-with-revoman-config-demo[]\n    MapsKt.filterKeys(\n            pqRunDown.stepNameToReport, stepName -> !unsuccessfulStepsException.contains(stepName))\n        .values()\n        .forEach(\n            stepReport ->\n                assertThat(stepReport.isSuccessful())\n                    .as(\n                        String.format(\n                            \"***** REQUEST:%s\\n***** RESPONSE:%s\",\n                            stepReport.getRequestData().toMessage(),\n                            (stepReport.getResponseData() != null)\n                                ? stepReport.getResponseData().toMessage()\n                                : \"empty\"))\n                    .isTrue());\n    assertThat(pqRunDown.mutableEnv.get(\"quoteCalculationStatus\"))\n        .isEqualTo(\n            PricingPref.valueOf(pqRunDown.mutableEnv.getString(\"$pricingPref\")).completeStatus);\n  }\n\n  static void assertAfterPQCreate(String stepName, Rundown pqCreateQLIQLR) {\n    final var env = pqCreateQLIQLR.mutableEnv;\n    // Quote: LineItemCount, quoteCalculationStatus\n    assertThat(env).containsEntry(\"lineItemCount\", 10);\n    assertThat(env)\n        .containsEntry(\n            \"quoteCalculationStatus\",\n            PricingPref.valueOf(env.getString(\"$pricingPref\")).completeStatus);\n    // QLIs: Product2Id\n    final var productIdsFromEnv = env.valuesForKeysEndingWith(String.class, \"ProductId\");\n    final var productIdsFromCreatedQLIs =\n        env.valuesForKeysStartingWith(String.class, \"productForQLI\");\n    assertThat(productIdsFromCreatedQLIs).containsAll(productIdsFromEnv);\n    // QLRs: QuoteId, MainQuoteLineId, AssociatedQuoteLineId\n    final var quoteIdFromQLRs = env.valuesForKeysStartingWith(String.class, \"quoteForQLR\");\n    assertThat(quoteIdFromQLRs).containsOnly(env.getString(\"quoteId\"));\n    assertThat(env.valuesForKeysStartingWith(String.class, \"mainQuoteLine+associatedQuoteLine\"))\n        .containsOnly(\n            env.get(\"qliCreated1Id\") + \"-\" + env.get(\"qliCreated2Id\"),\n            env.get(\"qliCreated1Id\") + \"-\" + env.get(\"qliCreated3Id\"),\n            env.get(\"qliCreated1Id\") + \"-\" + env.get(\"qliCreated4Id\"));\n  }\n\n  // end::pq-e2e-with-revoman-demo[]\n\n  private enum PricingPref {\n    Force(\"CompletedWithTax\"),\n    Skip(\"CompletedWithoutPricing\"),\n    System(\"CompletedWithTax\");\n\n    final String completeStatus;\n\n    PricingPref(String completeStatus) {\n      this.completeStatus = completeStatus;\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java b/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java
--- a/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java	(revision 8c5cbc6a4f1baee93b0b9b91849964b8f01b3b3d)
+++ b/src/integrationTest/java/com/salesforce/revoman/integration/core/pq/PQE2ETest.java	(date 1694943097788)
@@ -132,8 +132,8 @@
                     .as(
                         String.format(
                             "***** REQUEST:%s\n***** RESPONSE:%s",
-                            stepReport.getRequestData().toMessage(),
-                            (stepReport.getResponseData() != null)
+                            stepReport.getRequestInfo().toMessage(),
+                            (stepReport.getResponseInfo().getResponseData() != null)
                                 ? stepReport.getResponseData().toMessage()
                                 : "empty"))
                     .isTrue());
